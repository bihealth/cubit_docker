# CentOS image for cubit
#
# Build with
#
#       docker build [--build-arg PREFIX=/cubit] -t cubit.centos7 .
#
# Run with
#
#       docker run -it \
#           -u ${UID}:${GROUPS} \
#           -v /vol/local/data/data/cubit.env/cubit:/cubit.env \
#           -v /vol/local/data/data/cubit.env/centos7:/cubit \
#           cubit.centos7
FROM centos:7

# Install prefix, can be changed with docker build --build-arg PREFIX=/other
ARG PREFIX=/cubit

# Install EPEL, for more packages
RUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm

# Install required packages
RUN yum update -y && \
    yum install -y \
        autoconf \
        automake \
        bzip2 \
        bzip2-devel \
        doxygen \
        environment-modules \
        file \
        gawk \
        gcc \
        gcc-c++ \
        git \
        libbz2-devel \
        libdb-devel \
        libibverbs-devel \
        libpng12 \
        libpng-devel \
        libXt-devel \
        libxml2-devel \
        lzo-devel \
        m4 \
        make \
        mariadb-devel \
        mlocate \
        ncurses-libs \
        openssl-devel \
        patch \
        perl \
        perl-Data-Dumper \
        perl-List-MoreUtils \
        pth \
        python-devel \
        python-pip \
        sqlite-devel \
        tar \
        tcsh \
        unzip \
        vim-common \
        wget \
        which \
        zip

# Copy libdrmaa.so to the right place so the Python drmaa
# package installs.  Torque's drmaa does not work as it contains
# C++ symbols -_-
RUN cd tmp && \
        wget http://dl.dropbox.com/u/47200624/respin/ge2011.11.tar.gz && \
        tar xzf ge2011.11.tar.gz && \
        mkdir -p /opt/sge/lib/lx-amd64 && \
        cp ge2011.11/lib/linux-x64/libdrmaa.so /opt/sge/lib/lx-amd64 && \
        rm -rf ge2011.11.tar.gz ge2011.11

# Append module loading to system-wide profile file
RUN echo "typeset -f module > /dev/null" >> /etc/profile && \
        echo "source /etc/profile.d/modules.sh" >> /etc/profile && \
        echo "module use $PREFIX/current/tools/easybuild/modules/all" >> /etc/profile && \
        echo "module load EasyBuild" >> /etc/profile && \
        echo "export PYTHONPATH=\$PYTHONPATH:$PREFIX/current/tools/easybuild.local" >> /etc/profile
RUN source /etc/profile

# Install modern version of setuptools via pip
RUN pip install setuptools==19.4

# Add user, must have a name for Python installer
RUN groupadd -g __gid__ buildmaster && \
        adduser -u __uid__ -g __gid__ buildmaster
